base = """\
Split the provided code file into chunks.
Return a list of functions, classes and methods in this code file as JSON data.
Each item in the list should contain:
1. `id` - the complete call path, e.g. `path/to/file:class.method`
2. `start_line` - where the function, class or method begins
3. `end_line` - where it ends - INCLUSIVE

If there are no chunks, return an empty list.

EXAMPLE:
--------------------------------------------------------------------------------
src/graph.py
1:import pathlib as Path
2:
3:
4:class KnowledgeGraph:
5:    def __init__(self, cwd: Path):
6:        self.cwd = cwd
7:
8:_knowledge_graph = None
9:def get_knowledge_graph():
10:    global _knowledge_graph
11:    if _knowledge_graph is None:
12:        _knowledge_graph = KnowledgeGraph(Path.cwd())
13:    return _knowledge_graph
14:

RESPONSE:
{
    "chunks": [
        {"id": "src/graph.py:KnowledgeGraph", "start_line": 4, "end_line": 6},
        {"id": "src/graph.py:KnowledgeGraph.__init__", "start_line": 5, "end_line": 6},
        {"id": "src/graph.py:get_knowledge_graph", "start_line": 9, "end_line": 13}
    ]
}
--------------------------------------------------------------------------------
"""

first_pass="""\
Make sure to start at the beginning of the file and do it in order!"""

next_pass = """\
You are continuing this task from a previous call. Start exactly where the previous call stopped, output the last chunk as the first chunk of your new output, and finish the rest of the file after that chunk.
Here is the last chunk already parsed, that you will start with:
{{ last_chunk }}"""
